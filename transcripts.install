<?php
// $Id$

function transcripts_update_7002() {
	if (!db_field_exists('transcripts_transcript', 'trid')) {
		db_drop_primary_key('transcripts_transcript');
		db_drop_index('transcripts_transcript', 'type_id');
		db_drop_index('transcripts_transcript', 'fid_status');
		db_drop_index('transcripts_transcript', 'fid_module');
		
		db_add_index('transcripts_transcript', 'module_type_id', array('module', 'type', 'id'));
		db_add_field('transcripts_transcript', 'trid',
			array(
				'description' => 'Transcript ID',
				'type' => 'serial',
				'not null' => TRUE,
			),
			array(
				'primary key' => array('trid')
			)
		);
	}
}

function transcripts_update_7001() {
	if (db_field_exists('transcripts_transcript', 'nid')) { // we've got the old schema in the db
		db_drop_field('transcripts_transcript', 'nid');
		db_drop_field('transcripts_transcript', 'removed');
		db_drop_field('transcripts_transcript', 'hash');
		db_drop_field('transcripts_transcript', 'body');
	}
	if (!db_field_exists('transcripts_transcript', 'module')) { // we've got the old schema in the db
		$schema = transcripts_schema();
		$t_schema = $schema['transcripts_transcript'];
		db_add_field('transcripts_transcript', 'module', $t_schema['fields']['module']);
		db_add_field('transcripts_transcript', 'type', $t_schema['fields']['type']);
		db_add_field('transcripts_transcript', 'id', $t_schema['fields']['id']);
		db_add_field('transcripts_transcript', 'status', $t_schema['fields']['status']); 
   }
}

function transcripts_schema() {
	$schema['transcripts_transcript'] = array(
		'description' => 'Track use of a transcript',
		'fields' => array(
			'trid' => array(
				'description' => 'Transcript ID',
				'type' => 'serial',
				'not null' => TRUE,
			),
			'fid' => array(
				'description' => 'File ID',
				'type' => 'int',
				'unsigned' => TRUE,
				'not null' => TRUE,
            ),
            'module' => array(
            	'description' => 'The name of the module that is using the transcript',
            	'type' => 'varchar',
            	'length' => 255,
            	'not null' => TRUE,
            	'default' => '',
            ),
            'type' => array(
            	'description' => 'The name of the object type in which the transcript is used',
            	'type' => 'varchar',
            	'length' => 64,
            	'not null' => TRUE,
            	'default' => '',
            ),
            'id' => array(
            	'description' => 'The primary key of the object using the transcript',
            	'type' => 'int',
            	'unsigned' => TRUE,
            	'not null' => TRUE,
            	'default' => 0,
            ),
            'status' => array(
            	'description' => 'The status of the transcript in the index',
            	'type' => 'int',
            	'unsigned' => TRUE,
            	'not null' => TRUE,
            	'default' => 0,
            ),
        ),
        'primary key' => array('trid'),
        'indexes' => array(
        	'module_type_id' => array('module', 'type', 'id'),
        ),
    );
	$schema['transcripts_display_profile'] = array(
		'description' => 'Transcripts display profiles',
		'fields' => array(
			'pid' => array(
				'description' => 'Unique identifier for this profile',
				'type' => 'varchar',
				'length' => 64,
				'not null' => TRUE,
			),
			'uid' => array(
				'description' => 'the user that owns this display profile',
				'type' => 'int',
				'not null' => TRUE,
				'default' => 0
			),
			'menu' => array(
				'description' => 'menu fragment identifying this display profile',
				'type' => 'varchar',
				'length' => 64,
				'not null' => TRUE,
			),
			'tiers' => array(
				'description' => 'tiers to display as part of this profile',
				'type' => 'text',
				'not null' => TRUE,
				'serialize' => TRUE,
			),
			'modes' => array(
				'description' => 'display modes enabled as part of this profile',
				'type' => 'text',
				'not null' => TRUE,
				'serialize' => TRUE,
			),
			'default_mode' => array(
				'description' => 'default display mode for this profile',
				'type' => 'varchar',
				'length' => 255,
				'not null' => TRUE,
				'serialize' => TRUE,
			),
		),
		'primary key' => array('pid'),
	);
	return $schema;
}
