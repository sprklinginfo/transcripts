<?php
// $Id$

function bubtitles_init() {
	drupal_add_library('system', 'ui.draggable');
  drupal_add_library('system', 'ui.resizable');
  drupal_add_css(drupal_get_path('module', 'bubtitles') .'/bubtitles.css', 'file');
  drupal_add_js(drupal_get_path('module', 'bubtitles') .'/bubtitles.js', 'file');
}

function bubtitles_transcripts_info() {
	return array(
		'name' => t('Speech bubbles'),
		'to' => 'toBubbler',
		'back' => 'fromBubbler',
	);
}

function bubtitles_permission() {
  return array(
    'move bubbles' => array(
    	'title' => t('Tag participants and position speech bubbles'),
    ),
    'administer bubtitles' => array(
      'title' => t('Administer bubtitles module'),
      ),
    );
}

/*
function bubtitles_og_permission() {
  return array(
    'move bubbles' => array(
    	'title' => t('Tag participants and position speech bubbles'),
    ),
  );
}
*/

function bubtitles_menu() {
  $items = array();

  $items['node/%/transcript'] = array(
  	'title' => '',
  	'page callback' => 'transcript_player_title',
  	'page arguments' => array(1),
  	'access callback' => TRUE,
  );
  $items['node/%/transcript/bubbles/get'] = array(
  	'title' => 'Get speech bubble positions',
  	'description' => t('Get positions of speech bubbles'),
  	'page callback' => 'bubtitles_get',
  	'page arguments' => array(1),
  	'access callback' => TRUE,
  );
  $items['node/%/bubbles/get'] = array(
  	'title' => 'Get speech bubble positions',
  	'description' => t('Get positions of speech bubbles'),
  	'page callback' => 'bubtitles_get',
  	'page arguments' => array(1),
  	'access callback' => TRUE,
  );
  $items['node/%/transcript/bubbles/set'] = array(
  	'title' => 'Set speech bubbles',
  	'description' => t('Write speech bubble positions to database'),
  	'page callback' => 'bubtitles_set',
  	'page arguments' => array(1),
  	'access arguments' => array('move bubbles'),
  );
  $items['node/%/bubbles/set'] = array(
  	'title' => 'Set speech bubbles',
  	'description' => t('Write speech bubble positions to database'),
  	'page callback' => 'bubtitles_set',
  	'page arguments' => array(1),
  	'access arguments' => array('move bubbles'),
  );
  
  return $items;
}

function bubtitles_transcript_player_prepare_player($vid) {
	$return = bubtitles_positions($vid);
	$return['saveSettings'] = user_access('move bubbles') ? true : false;
	drupal_add_js(array("speechBubbles_$vid" => $return), 'setting');
}

function bubtitles_get($vid) {
	$return = bubtitles_positions($vid);
	$return['saveSettings'] = user_access('move bubbles') ? true : false;
	drupal_json_output($return);
}

function bubtitles_set($vid) {
	$settings = $_POST['settings'];
	$defaults = array('bid' => '', 'name' => '', 'angle' => '', 'center_x' => '', 'center_y' => '', 'radius' => '', 'display' => '', 'height' => '', 'width' => '', 'style' => '');
	foreach ($settings['bubbles'] as $bubble) {
		$bubble = array_filter(array_intersect_key($bubble, $defaults));
		$bubble['vid'] = $vid;
		
		if (isset($bubble['bid'])) {
			db_update('bubtitles_position')
				->condition('bid', $bubble['bid'])
				->fields($bubble)
				->execute();
		}
		else {
			db_insert('bubtitles_position')
				->fields($bubble)
				->execute();
		}
	}
	drupal_json_output(bubtitles_positions($vid));
}

function bubtitles_positions($vid) {
	$return = array();
	
	$bubbles = db_query("SELECT * FROM {bubtitles_position} WHERE vid=:vid", array(':vid' => $vid))->fetchAll();
	if (count($bubbles) > 0) {
		$return['bubbles'] = $bubbles;
	}
	
	return $return;
}


?>
