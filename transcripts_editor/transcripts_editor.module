<?php
// $Id$

include_once 'transcripts_editor.index.inc';

function transcripts_editor_init() {
	drupal_add_library('system', 'ui.autocomplete');
	drupal_add_library('system', 'ui.dialog');
	drupal_add_library('system', 'effects.blind');
	drupal_add_js(drupal_get_path('module', 'transcripts_editor') .'/jquery.hoverIntent.js', 'file');
	drupal_add_js(drupal_get_path('module', 'transcripts_editor') .'/jquery.ui.combobox.js', 'file');
	drupal_add_js(drupal_get_path('module', 'transcripts_editor') .'/jquery.jeditable.js', 'file');
	drupal_add_js(drupal_get_path('module', 'transcripts_editor') .'/jquery.jeditable.elastic.js', 'file');
	drupal_add_js(drupal_get_path('module', 'transcripts_editor') .'/jquery.jeditable.combobox.js', 'file');
	drupal_add_js(drupal_get_path('module', 'transcripts_editor') .'/jquery.elastic.source.js', 'file');
	drupal_add_js(drupal_get_path('module', 'transcripts_editor') .'/transcripts_editor.js', 'file');
	drupal_add_css(drupal_get_path('module', 'transcripts_editor') .'/transcripts_editor.css', 'file');
	drupal_add_js(drupal_get_path('module', 'transcripts_editor') .'/ui.spinner.js', 'file');
	drupal_add_js(drupal_get_path('module', 'transcripts_editor') .'/jquery.jeditable.spinner.js', 'file');
	drupal_add_css(drupal_get_path('module', 'transcripts_editor') .'/ui.spinner.css', 'file');
}

function transcripts_editor_menu() {
	$items = array();
  	
	$items['tcu/update'] = array(
		'page callback' => 'transcripts_editor_update_tcu',
		'access callback' => TRUE,
		'type' => MENU_CALLBACK,
	);
	
	return $items;
}

function transcripts_editor_update_tcu() {
	$trid = $_POST['trid'];
	$nid = $_POST['nid'];
    
	if (user_access('edit transcripts') && node_access('update', node_load($nid))) {
		$k = 0;
		$tcuids = array();
        
		if (!empty($_POST['update'])) {
			foreach ($_POST['update'] as $update) {
				$tcu = tcu_load($update['tcuid']);
				if ($tcu->trid == $trid) {
					$tcu->speaker = $update['speaker'];
					$tcu->start = $update['start'];
					$tcu->end = $update['end'];
					$tcu->setTiers($update['tiers']);
					tcu_save($tcu);
					$k++;
				}
			}
		}
		if (!empty($_POST['insert'])) {
			foreach ($_POST['insert'] as $insert) {
				$tcu = tcu_create(
					array(
						'trid' => $trid,
						'speaker' => isset($insert['speaker']) ? $insert['speaker'] : '',
						'start' => isset($insert['start']) ? $insert['start'] : 0,
						'end' => isset($insert['end']) ? $insert['end'] : 0,
						'created' => REQUEST_TIME,
						'changed' => REQUEST_TIME,
					)
				);
				tcu_save($tcu);
				$tcuids[] = $tcu->tcuid;
				
				$k++;
			}
		}
		if (!empty($_POST['remove'])) {
			foreach ($_POST['remove'] as $remove) {
				$tcu = tcu_load($remove['tcuid']);
				if ($tcu->trid == $trid) {
					tcu_delete($tcu);
					$k++;
				}
			}
		}
        
		//flag transcript as dirty - is it costly to repeat this?
		if ($k > 0 && !flag_get_flag('transcripts_dirty_transcript')->is_flagged($nid)) {
			flag_get_flag('transcripts_dirty_transcript')->flag('flag', $nid, user_load(1)); //flag by superuser
		}
        
		drupal_json_output(array(
			'status' => TRUE, 
			'tcuids' => $tcuids,
		));
	}
	else {
		drupal_json_output(array('status' => FALSE));
	}
}

function transcripts_editor_permission() {
	return array(
		'edit transcripts' => array(
			'title' => t('Edit transcripts and timecodes'),
		),
		'abandon transcript changes' => array(
			'title' => t('Abandon transcript changes'), 
			'description' => t('Return transcript to its original state by abandoning changes made to it online.'),
		),
	);
}

function transcripts_editor_transcripts_controller_prepare_player($trid) {
	$blocked = FALSE;
	
	$arr = db_select('transcripts_transcript', 'tr')
		->fields('tr', array('id'))
		->condition('tr.trid', $trid, '=')
		->execute()
		->fetchAssoc();
	$nid = $arr['id'];
	
	foreach (module_implements('transcripts_editor_disable_editing') as $module) {
		$blocked = module_invoke($module, 'transcripts_editor_disable_editing', $nid);
		//if hook returns TRUE then not allowed to edit
		if (!empty($blocked)) break;
	}
	$return = array(
		'editable' => !$blocked && user_access('edit transcripts') && node_access('update', node_load($nid)) ? true : false,
		'nid' => $nid,
	);
	drupal_add_js(array("transcripts_editor_$trid" => $return), 'setting');
}