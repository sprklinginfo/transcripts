(function($) {
		Drupal.behaviors.transcriptsEditor = {
			attach:
				function(context, settings) {
					var hoverPlaywrapper = false;
					var tierHolder = '&lt;Empty&gt;';
					var speakerHolder = '&lt;No name&gt;';
					$('.transcript-player', context).once('editable').each(function() {
						var $player = $(this);
						var pid = $player.attr('id');
						var data = Drupal.settings['transcripts_editor_' + pid.substring(4)];
						if (data.editable) {
							var pencilId = "pencil" + pid;
							var $input = $('<input id="' + pencilId + '" class="pencil" type="checkbox"/>');
							$('<span class="control-block edit-controls"></span>')
								.appendTo($player.find('.video-controls'))
								.append($input).append('<label for="' + pencilId + '"></label>');
								
							$input.button({
								label: 'Edit transcript',
								icons: {
									primary: 'ui-icon-pencil'
								},
								text: false
							}).change(function() {
								if ($input.is(':checked')) {
									disableClickAndPlay($player);
									if (hoverPlaywrapper) {
										$('.infocontrols', $player).css('visibility', 'hidden');
										$('.timecodes', $player).css('visibility', 'hidden');
										
										$('.playwrapper', $player).hoverIntent(
											function() {
												$('.infocontrols', this).css('visibility', 'visible');
												$('.timecodes', this).css('visibility', 'visible');
											},
											function() {
												$('.timecodes input', this).blur();
												$('.infocontrols', this).css('visibility', 'hidden');
												$('.timecodes', this).css('visibility', 'hidden');
											}
										);
									}
									$('.playwrapper', $player).show();
									$('.transcript', $player).addClass('editing');
									$('.transcript span', $player).contents().unwrap(); //remove spans from transcript
									$('.tier', $player).editable(
										function(value, settings) {
											return(value); //return value is displayed after editing is complete
										},{
											type: 'elastic',
											placeholder: tierHolder,
											onblur: 'submit',
											elastic: {}
										}
									);	
									var dupes = {};
									var speakers = [];
									$('.speakername', $player).each(function() {
										var speaker = $(this).text();
										if (!dupes[speaker]) {
											dupes[speaker] = true;
											speakers[speaker] = speaker;
										}
									});
									$('.speakername', $player).editable(
										function(value, settings) {
											var $s = $(this).parents('div[data-participant]');
											if ($s.attr('data-participant') != value) { //changed
												$s.attr('data-participant', value);
											}
											return(value); //return value is displayed after editing is complete
										},{
											type: 'combobox',
											placeholder: speakerHolder,
											data: speakers,
											onblur: 'submit'
										}
									);
									$('.t1,.t2', $player).editable(
										function(value, settings) {
											var t = $(this).hasClass('t1') ? 'data-begin' : 'data-end';
											var $s = $(this).parents('div[' + t + ']');
											if ($s.attr(t) != value) { //changed
												$s.attr(t, value);
											}
											return(value);
										},{
											type: 'spinner',
											onblur: //submit without delay
												function(value, settings) {
													$('form', this).submit();
												},
											spinner: {
												min: 0,
												places: 3,
												defaultStep: .01,
												largeStep: .1
											}
										}
									);
									var msg = "This sentence will be deleted from the transcript. Are you sure?";
									
									$('div[data-begin]', $player)
										.each(
											function(i) {
												var $del = $('<a href="#"></a>')
													.addClass('s-delete')
													.attr('role', 'button')
													.attr('title', 'Delete sentence')
													.append('<span class="ui-icon ui-icon-close ui-state-default ui-corner-all">Delete</span>')
													.hover(
														function() {
															$('span',this).addClass('ui-state-hover');
														},
														function() {
															$('span',this).removeClass('ui-state-hover');
														}
													)
													.focus(function() {
														$('span',this).addClass('ui-state-focus');
													})
													.blur(function() {
														$('span',this).removeClass('ui-state-focus');
													})
													.click(function(event) {
														var $s = $(this).parents('div[data-begin]'); //get sentence
														$(this).focus(); //not consistent across browsers
														$('<div></div>')
															.html('<span class="ui-icon ui-icon-alert" style="float:left; margin:0 7px 20px 0;">Alert</span> ' + msg)
															.dialog({
																dialogClass:'delete-dialog',
																title:'Delete sentence?',
																resizable: false,
																height:120,
																modal: true,
																closeOnEscape:false,
																buttons: {
																	"Yes": function() {
																		$s.hide('blind',750)
																			.addClass('deleted')
																			.find('.delete-wrapper').hide()
																			.find('.ui-icon').removeClass('ui-state-focus');
																		$(this).dialog('close');
																	},
																	"No": function() {
																		$('.delete-wrapper .ui-icon',$s).removeClass('ui-state-focus');
																		$(this).dialog('close');
																	}
																}
															});
															return false;
													});
												$('<div class="delete-wrapper">').append($del).appendTo(this);
												
												var $ins = $('<a href="#"></a>')
													.addClass('s-insert')
													.attr('role','button')
													.attr('title','Insert sentence')
													.append('<span class="ui-icon ui-icon-plus ui-state-default ui-corner-all">Insert</span>')
													.hover(
														function() {
															$('span',this).addClass('ui-state-hover');
														},
														function() {
															$('span',this).removeClass('ui-state-hover');
														}
													)
													.click(function(event) {
														var $s = $(this).parents('div[data-begin]'); //get sentence
														var id = $s.attr('id');
														$s.clone(false)
															.attr('id',id)
															.css('display','none') //show with effect
															.insertAfter($s)
															.show('blind',750);
														return false;
													});
												
												var cls = (i%3 == 0) ? 'show-icon' : 'hide-icon';
												$(this).append('<div class="clearfix"></div>');
												$('<div class="insert-wrapper ' + cls + '">')
													.append($ins)
													.appendTo(this);
											}
									  );
									$('.hide-icon',$player)
									.animate({opacity:0},2500)
										.hover(
											function() {
												$(this).css('opacity',1);
											},
											function() {
												$(this).css('opacity',0);
											}
										);
								} else {  
									/* remove placeholders, replace is here because of IE */
									$('.tier', $player).each(function() {
										if ($(this).html().toLowerCase().replace(/(;|")/g, '') ==
											tierHolder.toLowerCase().replace(/(;|")/g, '')) {
												$(this).html('');
										}
									});
									$('.speakername', $player).each(function() {
										if ($(this).html().toLowerCase().replace(/(;|")/g, '') ==
											speakerHolder.toLowerCase().replace(/(;|")/g, '')) {
												$(this).html('');
										}
									});
									$('.tier', $player).editable('destroy');
									$('.speakername', $player).editable('destroy');
									
									//remove delete and insert buttons
									$('.delete-wrapper', $player).remove();
									$('.insert-wrapper', $player).remove();
									
									//hide info controls
									$('.playwrapper', $player).hide();
									$('.infocontrols', $player).css('visibility', 'visible');
									$('.playwrapper', $player).css('visibility', 'visible');
									
									$('.transcript', $player).removeClass('editing');
									enableClickAndPlay($player);
								}
							});
						}
					});
				}
		}
})(jQuery);
